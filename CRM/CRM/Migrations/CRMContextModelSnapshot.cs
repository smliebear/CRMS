// <auto-generated />
using System;
using CRM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRM.Migrations
{
    [DbContext(typeof(CRMContext))]
    partial class CRMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CRM.Data.Floors", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("F_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("FMaleOrFemale")
                        .HasColumnName("F_MaleOrFemale");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnName("F_Name")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("FRemark")
                        .HasColumnName("F_Remark")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("HId")
                        .HasColumnName("H_ID");

                    b.HasKey("FId");

                    b.HasIndex("HId");

                    b.ToTable("Floors");
                });

            modelBuilder.Entity("CRM.Data.Houses", b =>
                {
                    b.Property<int>("HId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("H_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("HMaleOrFemale")
                        .HasColumnName("H_MaleOrFemale");

                    b.Property<string>("HName")
                        .IsRequired()
                        .HasColumnName("H_Name")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HRemark")
                        .HasColumnName("H_Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("HId");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("CRM.Data.OperationLogs", b =>
                {
                    b.Property<int>("PlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PL_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlDescription")
                        .HasColumnName("PL_Description")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("PlOperation")
                        .HasColumnName("PL_Operation")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("PlTableName")
                        .HasColumnName("PL_TableName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("PlTime")
                        .HasColumnName("PL_Time")
                        .HasColumnType("datetime");

                    b.Property<int?>("TId")
                        .HasColumnName("T_ID");

                    b.HasKey("PlId");

                    b.HasIndex("TId");

                    b.ToTable("OperationLogs");
                });

            modelBuilder.Entity("CRM.Data.Provinces", b =>
                {
                    b.Property<int>("PId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("P_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasColumnName("P_Name")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("PRemark")
                        .HasColumnName("P_Remark")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("PId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("CRM.Data.RoomCategories", b =>
                {
                    b.Property<int>("RcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RC_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("RcCount")
                        .HasColumnName("RC_Count");

                    b.Property<decimal?>("RcMoneyPerMonth")
                        .HasColumnName("RC_MoneyPerMonth")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("RcName")
                        .IsRequired()
                        .HasColumnName("RC_Name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("RcId");

                    b.ToTable("RoomCategories");
                });

            modelBuilder.Entity("CRM.Data.Rooms", b =>
                {
                    b.Property<int>("RId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("R_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FId")
                        .HasColumnName("F_ID");

                    b.Property<bool?>("RIsHasFull")
                        .HasColumnName("R_IsHasFull");

                    b.Property<byte?>("RMaleOrFemale")
                        .HasColumnName("R_MaleOrFemale");

                    b.Property<string>("RName")
                        .IsRequired()
                        .HasColumnName("R_Name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("RcId")
                        .HasColumnName("RC_ID");

                    b.HasKey("RId");

                    b.HasIndex("FId");

                    b.HasIndex("RcId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("CRM.Data.SchoolClasses", b =>
                {
                    b.Property<int>("ScId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SC_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ScFemaleAmount")
                        .HasColumnName("SC_FemaleAmount");

                    b.Property<int?>("ScMaleAmount")
                        .HasColumnName("SC_MaleAmount");

                    b.Property<string>("ScName")
                        .HasColumnName("SC_Name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ScSupervisor")
                        .HasColumnName("SC_Supervisor")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ScTeacher")
                        .HasColumnName("SC_Teacher")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("SchoolId")
                        .HasColumnName("School_ID");

                    b.Property<int?>("SpecialtyId")
                        .HasColumnName("Specialty_ID");

                    b.HasKey("ScId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("SpecialtyId");

                    b.ToTable("SchoolClasses");
                });

            modelBuilder.Entity("CRM.Data.Schools", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("School_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PId")
                        .HasColumnName("P_ID");

                    b.Property<string>("SchoolCode")
                        .IsRequired()
                        .HasColumnName("School_Code")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnName("School_Name")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("SchoolRemark")
                        .HasColumnName("School_Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("SchoolId");

                    b.HasIndex("PId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("CRM.Data.SelectStationPeriods", b =>
                {
                    b.Property<int>("SspId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SSP_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SchoolId")
                        .HasColumnName("School_ID");

                    b.Property<int?>("SpecialtyId")
                        .HasColumnName("Specialty_ID");

                    b.Property<byte>("SspOverDay")
                        .HasColumnName("SSP_OverDay");

                    b.Property<DateTime>("SspPreachDate")
                        .HasColumnName("SSP_PreachDate")
                        .HasColumnType("date");

                    b.HasKey("SspId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("SpecialtyId");

                    b.ToTable("SelectStationPeriods");
                });

            modelBuilder.Entity("CRM.Data.Specialties", b =>
                {
                    b.Property<int>("SpecialtyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Specialty_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SpecialtyDescription")
                        .HasColumnName("Specialty_Description")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("SpecialtyName")
                        .IsRequired()
                        .HasColumnName("Specialty_Name")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("SpecialtyId");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("CRM.Data.Stations", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Station_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StationDuty")
                        .IsRequired()
                        .HasColumnName("Station_Duty")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnName("Station_Name")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("StationNeedTechnique")
                        .IsRequired()
                        .HasColumnName("Station_NeedTechnique")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("StationId");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("CRM.Data.Students", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Student_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ScId")
                        .HasColumnName("SC_ID");

                    b.Property<int?>("StationId")
                        .HasColumnName("Station_ID");

                    b.Property<byte?>("StationtSelectStationCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Stationt_SelectStationCount")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("StudentAddress")
                        .HasColumnName("Student_Address")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("StudentEducation")
                        .HasColumnName("Student_Education")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("StudentEducationMoney")
                        .HasColumnName("Student_EducationMoney")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("StudentEvaluate1")
                        .HasColumnName("Student_Evaluate1")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("StudentEvaluate2")
                        .HasColumnName("Student_Evaluate2")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("StudentExam")
                        .HasColumnName("Student_Exam")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("StudentFamilyTel")
                        .HasColumnName("Student_FamilyTel")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("StudentIdentityNumber")
                        .HasColumnName("Student_IdentityNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("StudentName")
                        .HasColumnName("Student_Name")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("StudentNameSpell")
                        .HasColumnName("Student_NameSpell")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("StudentNo")
                        .HasColumnName("Student_NO")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("StudentPersonalTel")
                        .HasColumnName("Student_PersonalTel")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("StudentPostCode")
                        .HasColumnName("Student_PostCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("StudentQq")
                        .HasColumnName("Student_QQ")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("StudentRemark")
                        .HasColumnName("Student_Remark")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("StudentSchoolofgraduation")
                        .HasColumnName("Student_Schoolofgraduation")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("StudentSex")
                        .HasColumnName("Student_Sex")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("StudentSkillTrainingMoney")
                        .HasColumnName("Student_SkillTrainingMoney")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("StudentSpecialty")
                        .HasColumnName("Student_Specialty")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("StudentState")
                        .HasColumnName("Student_State")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("StudentTrainResideMoney")
                        .HasColumnName("Student_TrainResideMoney")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("StudentId");

                    b.HasIndex("ScId");

                    b.HasIndex("StationId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CRM.Data.Teachers", b =>
                {
                    b.Property<int>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("T_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("TCategory")
                        .HasColumnName("T_Category");

                    b.Property<bool>("TIsEnabled")
                        .HasColumnName("T_IsEnabled");

                    b.Property<DateTime?>("TLastLoginTime")
                        .HasColumnName("T_LastLoginTime")
                        .HasColumnType("datetime");

                    b.Property<string>("TLoginName")
                        .IsRequired()
                        .HasColumnName("T_LoginName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TName")
                        .IsRequired()
                        .HasColumnName("T_Name")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TPwd")
                        .IsRequired()
                        .HasColumnName("T_Pwd")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<byte>("TRole")
                        .HasColumnName("T_Role");

                    b.Property<string>("TSex")
                        .IsRequired()
                        .HasColumnName("T_Sex")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("TTel")
                        .IsRequired()
                        .HasColumnName("T_Tel")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("TId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("CRM.Data.TrainClasses", b =>
                {
                    b.Property<int>("TcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TC_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TcBeginTime")
                        .HasColumnName("TC_BeginTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TcEndTime")
                        .HasColumnName("TC_EndTime")
                        .HasColumnType("datetime");

                    b.Property<byte?>("TcFemaleAmount")
                        .HasColumnName("TC_FemaleAmount");

                    b.Property<string>("TcGrade")
                        .IsRequired()
                        .HasColumnName("TC_Grade")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<byte?>("TcMaleAmount")
                        .HasColumnName("TC_MaleAmount");

                    b.Property<byte>("TcMaxAmount")
                        .HasColumnName("TC_MaxAmount");

                    b.Property<string>("TcName")
                        .IsRequired()
                        .HasColumnName("TC_Name")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<byte?>("TcPeriod")
                        .HasColumnName("TC_Period");

                    b.HasKey("TcId");

                    b.ToTable("TrainClasses");
                });

            modelBuilder.Entity("CRM.Data.Floors", b =>
                {
                    b.HasOne("CRM.Data.Houses", "H")
                        .WithMany("Floors")
                        .HasForeignKey("HId")
                        .HasConstraintName("FK_FLOORS_REFERENCE_HOUSES");
                });

            modelBuilder.Entity("CRM.Data.OperationLogs", b =>
                {
                    b.HasOne("CRM.Data.Teachers", "T")
                        .WithMany("OperationLogs")
                        .HasForeignKey("TId")
                        .HasConstraintName("FK_OPERATIO_REFERENCE_TEACHERS");
                });

            modelBuilder.Entity("CRM.Data.Rooms", b =>
                {
                    b.HasOne("CRM.Data.Floors", "F")
                        .WithMany("Rooms")
                        .HasForeignKey("FId")
                        .HasConstraintName("FK_ROOMS_REFERENCE_FLOORS");

                    b.HasOne("CRM.Data.RoomCategories", "Rc")
                        .WithMany("Rooms")
                        .HasForeignKey("RcId")
                        .HasConstraintName("FK_ROOMS_REFERENCE_ROOMCATE");
                });

            modelBuilder.Entity("CRM.Data.SchoolClasses", b =>
                {
                    b.HasOne("CRM.Data.Schools", "School")
                        .WithMany("SchoolClasses")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK_SCHOOLCL_REFERENCE_SCHOOLS");

                    b.HasOne("CRM.Data.Specialties", "Specialty")
                        .WithMany("SchoolClasses")
                        .HasForeignKey("SpecialtyId")
                        .HasConstraintName("FK_SCHOOLCL_REFERENCE_SPECIALT");
                });

            modelBuilder.Entity("CRM.Data.Schools", b =>
                {
                    b.HasOne("CRM.Data.Provinces", "P")
                        .WithMany("Schools")
                        .HasForeignKey("PId")
                        .HasConstraintName("FK_SCHOOLS_REFERENCE_PROVINCE");
                });

            modelBuilder.Entity("CRM.Data.SelectStationPeriods", b =>
                {
                    b.HasOne("CRM.Data.Schools", "School")
                        .WithMany("SelectStationPeriods")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK_SELECTST_REFERENCE_SCHOOLS");

                    b.HasOne("CRM.Data.Specialties", "Specialty")
                        .WithMany("SelectStationPeriods")
                        .HasForeignKey("SpecialtyId")
                        .HasConstraintName("FK_SELECTST_REFERENCE_SPECIALT");
                });

            modelBuilder.Entity("CRM.Data.Students", b =>
                {
                    b.HasOne("CRM.Data.SchoolClasses", "Sc")
                        .WithMany("Students")
                        .HasForeignKey("ScId")
                        .HasConstraintName("FK_STUDENTS_REFERENCE_SCHOOLCL");

                    b.HasOne("CRM.Data.Stations", "Station")
                        .WithMany("Students")
                        .HasForeignKey("StationId")
                        .HasConstraintName("FK_STUDENTS_REFERENCE_STATIONS");
                });
#pragma warning restore 612, 618
        }
    }
}
